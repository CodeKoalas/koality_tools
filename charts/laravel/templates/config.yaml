apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "appname" . }}
  labels:
    app: {{ template "appname" . }}
data:
  LETSENCRYPT_HOST: "{{ .Values.deployment.letsEncryptHost }}"
  APP_NAME: "{{ template "appname" . }}"
  APP_ENV: "{{ .Values.deployment.appEnv }}"
  VIRTUAL_HOST: "{{ .Values.deployment.virtualHost }}"
  APP_DEBUG: "{{ .Values.deployment.appDebug }}"
  APP_URL: "{{ .Values.deployment.appUrl }}"
  LOG_CHANNEL: "stack"
  LOG_LEVEL: "debug"
  DB_CONNECTION: "mysql"
  DB_DATABASE: "{{ .Values.persistence.databaseName }}"
  DB_USERNAME: "{{ .Values.persistence.databaseUser }}"
  BROADCAST_DRIVER: "log"
  CACHE_DRIVER: "file"
  FILESYSTEM_DRIVER: "local"
  QUEUE_CONNECTION: "sync"
  SESSION_DRIVER: "file"
  SESSION_LIFETIME: "120"
  MEMCACHED_HOST: "memcached"
{{- if .Values.redis.username }}
  REDIS_USERNAME: "{{ .Values.redis.username }}"
{{- end }}
{{- if .Values.redis.password }}
  REDIS_PASSWORD: "{{ .Values.redis.password }}"
{{- end }}
  REDIS_SCHEME: "{{ .Values.redis.scheme }}"
  REDIS_HOST: "{{ template "appname" . }}-redis"
  REDIS_PORT: "{{ .Values.redis.port }}"
  MAIL_MAILER: "{{ .Values.mail.mailer }}"
  MAIL_HOST: "{{ .Values.mail.host }}"
  MAIL_PORT: "{{ .Values.mail.port }}"
  MAIL_USERNAME: "{{ .Values.mail.username }}"
  MAIL_PASSWORD: "{{ .Values.mail.password }}"
  MAIL_ENCRYPTION: "{{ .Values.mail.encryption }}"
  MAIL_FROM_ADDRESS: "{{ .Values.mail.from.address }}"
  MAIL_FROM_NAME: "{{ .Values.mail.from.name }}"
{{- if .Values.aws.region }}
  AWS_DEFAULT_REGION: "{{ .Values.aws.region }}"
{{- end }}
{{- if .Values.aws.s3.bucket }}
  AWS_BUCKET: "{{ .Values.aws.s3.bucket }}"
{{- end }}
{{- if and (.Values.aws.s3.bucket) (not .Values.aws.s3.createNew) }}
  AWS_URL: "{{ .Values.aws.s3.url }}"
{{- end }}
{{- if .Values.aws.s3.usePathStyleEndpoint }}
  AWS_USE_PATH_STYLE_ENDPOINT: "{{ .Values.aws.s3.usePathStyleEndpoint }}"
{{- end}}
{{- if .Values.pusher.appID }}
  PUSHER_APP_ID: "{{ .Values.pusher.appId }}"
{{- end }}
{{- if .Values.pusher.appKey }}
  PUSHER_APP_KEY: "{{ .Values.pusher.appKey }}"
{{- end }}
{{- if .Values.pusher.appSecret }}
  PUSHER_APP_SECRET: "{{ .Values.pusher.appSecret }}"
{{- end }}
{{- if .Values.pusher.appCluster }}
  PUSHER_APP_CLUSTER: "{{ .Values.pusher.appCluster }}"
{{- end }}
{{- if .Values.pusher.appKey }}
  MIX_PUSHER_APP_KEY: "{{ .Values.mixpusher.appKey }}"
{{- end }}
{{- if .Values.pusher.appCluster }}
  MIX_PUSHER_APP_CLUSTER: "{{ .Values.mixpusher.appCluster }}"
{{- end }}
{{- if and .Values.redis.enabled .Values.echo.enabled }}
  BROADCAST_DRIVER: "redis"
  REDIS_HOST: "{{ template "appname" . }}-redis"
  REDIS_PORT: {{ .Values.redis.port | quote }}
  LARAVEL_ECHO_SERVER_HOST: "{{ .Values.echo.host }}"
  LARAVEL_ECHO_SERVER_PORT: "{{ .Values.echo.port }}"
  LARAVEL_ECHO_SERVER_REDIS_HOST: "{{ template "appname" . }}-redis"
  LARAVEL_ECHO_SERVER_REDIS_PORT: {{ .Values.redis.port | quote }}
{{- end }}
{{- if .Values.deployment.extraEnv }}
{{- range $key, $value := .Values.deployment.extraEnv }}
  {{ $key }}: {{ $value | quote }}
{{- end }}
{{- end }}
{{- if .Values.deployment.fcmSenderId }}
  FCM_SENDER_ID: "{{ .Values.deployment.fcmSenderId }}"
{{- end }}

---
# Need to assign a configmap as a laravel-echo-server.json file to have configurable
# options for laravel-echo-server.
{{- if .Values.echo.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "appname" . }}-echo-server-file
  labels:
    app: {{ template "appname" . }}
data:
  laravel-echo-server.json: |
{{ .Values.echo.config.data | indent 4 }}
{{- end }}
