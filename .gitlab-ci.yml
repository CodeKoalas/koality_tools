variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"

stages:
  - build
  - upload

.build-base:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - echo "$DOCKER_REGISTRY_PASSWORD" | docker login -u "$DOCKER_REGISTRY_USER" --password-stdin
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

build init mysql image:
  extends: .build-base
  script:
    - cd docker/init-mysql
    - docker build -t $CI_REGISTRY_IMAGE:init-mysql ./
    - docker push $CI_REGISTRY_IMAGE:init-mysql
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
      changes:
        paths:
          - docker/init-mysql/*

build init laravel image:
  extends: .build-base
  script:
    - cd docker/init-laravel
    - docker build -t $CI_REGISTRY_IMAGE:init-laravel ./
    - docker push $CI_REGISTRY_IMAGE:init-laravel
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
      changes:
        paths:
          - docker/init-laravel/*

# @TODO: Clean this up into a utility script that gets fired on a tag and
# that script decides what it should build and upload to the Helm Repo. Hopefully
# Gitlab's Helm Registry will have some better out-of-box support soon.

# Start by using a pipeline that uses the `helm packages` command to package
# up the laravel-staging chart. Only trigger if the tag contains "laravel-staging"
build laravel chart:
  stage: build
  image: 
    name: alpine/helm:3.5.4
    entrypoint: [""]
  script:
    - cd charts
    - helm package laravel
  rules:
    # Check if tag contains "laravel-staging"
    - if: $CI_COMMIT_TAG =~ /^laravel-.*/
  artifacts:
    paths:
      - "**/*.tgz"
    expire_in: "1 week"

build mysql cluster chart:
  stage: build
  image: 
    name: alpine/helm:3.5.4
    entrypoint: [""]
  script:
    - cd charts
    - helm package mysql-cluster
  rules:
    - if: $CI_COMMIT_TAG =~ /^mysql-cluster-.*/
  artifacts:
    paths:
      - "**/*.tgz"
    expire_in: "1 week"

build drupal chart:
  stage: build
  image: 
    name: alpine/helm:3.5.4
    entrypoint: [""]
  script:
    - cd charts
    - helm package drupal
  rules:
    - if: $CI_COMMIT_TAG =~ /^drupal-.*/
  artifacts:
    paths:
      - "**/*.tgz"
    expire_in: "1 week"

build vue chart:
  stage: build
  image: 
    name: alpine/helm:3.5.4
    entrypoint: [""]
  script:
    - cd charts
    - helm package vue
  rules:
    - if: $CI_COMMIT_TAG =~ /^vue-.*/
  artifacts:
    paths:
      - "**/*.tgz"
    expire_in: "1 week"

# Ugly but works for now
upload charts:
  stage: upload
  image: curlimages/curl:latest
  variables:
    GIT_STRATEGY: none
  dependencies:
    - build mysql cluster chart
    - build laravel chart
    - build drupal chart
    - build vue chart
  rules:
    - if: $CI_COMMIT_TAG =~ /^mysql-cluster-.*/
    - if: $CI_COMMIT_TAG =~ /^laravel-.*/
    - if: $CI_COMMIT_TAG =~ /^drupal-.*/
    - if: $CI_COMMIT_TAG =~ /^vue-.*/
  script:
    - 'curl --request POST --user gitlab-ci-token:$CI_JOB_TOKEN --form "chart=@charts/$CI_COMMIT_TAG.tgz" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/api/stable/charts"'